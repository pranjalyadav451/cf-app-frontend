{"version":3,"sources":["Shared/util/AllTagsPresent.js","Shared/UIElements/NavBar.js","Shared/UIElements/CustomButton.js","Contest/Components/ContestTableItem.js","Shared/UIElements/ErrorModal.js","Contest/Pages/ContestTable.js","Questions/Components/QuestionCard.js","Contest/Components/ContestInfo.js","Shared/util/QuestionSortingOptions.js","Questions/Components/QuestionFilterForm.js","Shared/util/cfConfig.js","Shared/util/getLinks.js","Questions/Components/QuestionTableItem.js","Questions/Pages/QuestionTable.js","Shared/util/processUserData.js","Shared/Context/UserContext.js","User/Components/UserForm.js","User/Components/UserQuestionTable.js","User/Components/UserContestTable.js","User/Pages/UserDashboard.js","App.js","index.js"],"names":["module","exports","NavBar","className","to","exact","CustomButton","props","target","style","forPath","description","rel","href","STYLE_FIX_TO_CENTER_BUTTONS","width","Contest","isUserContest","contestLink","title","numberOfQues","class","contestId","ErrorModal","useState","openModal","setOpenModal","message","useEffect","length","Modal","dimmer","open","Header","Content","Actions","Button","negative","onClick","ContestTable","isLoading","setIsLoading","error","setError","contestItems","setContestItems","pageNumber","setPageNumber","getAllContests","useCallback","a","axios","baseURL","process","url","then","res","data","contests","catch","err","Dimmer","active","inline","Loader","Fragment","map","contest","ContestTableItem","contestName","division","contestDivision","contestQuestions","_id","Pagination","activePage","onPageChange","event","pointing","secondary","totalPages","CUSTOM_STYLE_FOR_BOTTOM_BUTTONS","QuestionCard","console","log","questionName","questionIndex","questionRating","questionLink","ContestInfo","useParams","contestInfo","setContestInfo","getContestInfoById","question","questionPoints","id","QUESTION_SORTING_OPTIONS","key","text","value","TAGS_OPTIONS","GLOBAL_ALL_TAGS_PRESENT","tag","CUSTOM_STYLE_FOR_SORT_DROPDOWN","padding","minMaxRatingValidator","INTIAL_STATE","tagCombination","tagOptions","excludedTagOptions","sortingOption","minRating","maxRating","onlyUnsolved","lastContests","fetchData","ACTION_ID","TAG_COMBINATION_CHANGE","TAG_OPTIONS_CHANGE","MIN_RATING_CHANGE","MAX_RATING_CHANGE","SORTING_OPTION_CHANGE","TOGGLE_ONLY_UNSOLVED","EXCLUDED_TAG_OPTIONS_CHANGE","LAST_CONTESTS_CHANGE","formReducer","state","action","type","actionId","QuestionFilterForm","useReducer","onFormSubmitHandler","formState","dispatch","radioChangeHandler","Form","onSubmit","preventDefault","Field","Dropdown","clearable","fluid","search","multiple","selection","onChange","options","Radio","label","name","checked","Input","size","min","max","placeholder","cfConfig","is_valid","item","undefined","getContestLink","getProbLink","probIndex","QuestionTableItem","isUserQuestion","dateAttempted","Label","probTitle","probRating","probTags","QuestionTable","questionItems","setQuestionItems","getQuestions","reqObject","page","method","questions","questionTags","probId","height","processUserData","attemptedQuestionsSet","Set","solvedQuestionsSet","attemptedContestsSet","submission","add","tempQuestionId","problem","index","verdict","solvedQuestionsList","attemptedQuestionsList","processedSubmission","rating","tags","lastAttemptedTime","Date","creationTimeSeconds","lastAttemptedDate","toLocaleDateString","solved","has","push","delete","attemptedContestsList","INITIAL_USER_CONTEXT","isLoggedIn","userHandle","userData","onError","setUserData","login","UserContext","React","createContext","UserForm","user","useContext","setUserHandle","onSubmitHandler","params","handle","userStatus","loading","UserQuestionTable","sort","b","UserContestTable","processUserContest","allContests","contestItemsList","contestItemsSet","result","processedContest","UserDashboard","activeItem","setActiveItem","itemClickHandler","e","Divider","hidden","Menu","Item","App","setIsLoggedIn","Provider","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8f1734be.chunk.js","sourcesContent":["const GLOBAL_ALL_TAGS_PRESENT = [\n\t\"brute force\",\n\t\"dfs and similar\",\n\t\"dp\",\n\t\"implementation\",\n\t\"data structures\",\n\t\"math\",\n\t\"two pointers\",\n\t\"combinatorics\",\n\t\"binary search\",\n\t\"bitmasks\",\n\t\"hashing\",\n\t\"string suffix structures\",\n\t\"constructive algorithms\",\n\t\"greedy\",\n\t\"probabilities\",\n\t\"ternary search\",\n\t\"matrices\",\n\t\"geometry\",\n\t\"shortest paths\",\n\t\"interactive\",\n\t\"graphs\",\n\t\"games\",\n\t\"strings\",\n\t\"dsu\",\n\t\"trees\",\n\t\"*special\",\n\t\"sortings\",\n\t\"number theory\",\n\t\"flows\",\n\t\"graph matchings\",\n\t\"fft\",\n\t\"divide and conquer\",\n\t\"meet-in-the-middle\",\n\t\"expression parsing\",\n\t\"2-sat\",\n\t\"chinese remainder theorem\",\n\t\"schedules\",\n];\nmodule.exports = GLOBAL_ALL_TAGS_PRESENT;\n","import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst NavBar = () => {\r\n\treturn (\r\n\t\t<div className=\"ui pointing menu\">\r\n\t\t\t<NavLink to=\"/\" exact className=\"item\">\r\n\t\t\t\tHome\r\n\t\t\t</NavLink>\r\n\t\t\t<NavLink to=\"/contests\" exact className=\"item\">\r\n\t\t\t\tContests\r\n\t\t\t</NavLink>\r\n\r\n\t\t\t<NavLink to=\"/questions\" exact className=\"item\">\r\n\t\t\t\tQuestions\r\n\t\t\t</NavLink>\r\n\t\t</div>\r\n\t);\r\n};\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../../Styles/CustomButton.css\";\r\n\r\nconst CustomButton = (props) => {\r\n\t// console.log(props.target,props.forPath);\r\n\tif (props.target !== \"blank\")\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={`custom-button center-flex ${props.className !== null ? props.className : \"\"}`}\r\n\t\t\t\tstyle={props.style !== null ? props.style : {}}\r\n\t\t\t>\r\n\t\t\t\t<Link to={props.forPath}>{props.description}</Link>\r\n\t\t\t</div>\r\n\t\t);\r\n\telse {\r\n\t\treturn (\r\n\t\t\t<div\r\n\t\t\t\tclassName={`custom-button center-flex ${props.className !== null ? props.className : \"\"}`}\r\n\t\t\t\tstyle={props.style !== null ? props.style : {}}\r\n\t\t\t>\r\n\t\t\t\t<a rel=\"noopener noreferrer\" href={props.forPath} target=\"_blank\">\r\n\t\t\t\t\t{props.description}\r\n\t\t\t\t</a>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n};\r\nexport default CustomButton;\r\n","import React from \"react\";\nimport CustomButton from \"../../Shared/UIElements/CustomButton\";\n\nconst STYLE_FIX_TO_CENTER_BUTTONS = {\n\twidth: \"100%\",\n};\n\nconst Contest = (props) => {\n\tconst { isUserContest, contestLink } = props;\n\treturn (\n\t\t<tr className={props.className}>\n\t\t\t<td>{props.title}</td>\n\t\t\t{isUserContest ? \"\" : <td className=\"center aligned\">{props.numberOfQues}</td>}\n\n\t\t\t<td className=\"center aligned\">\n\t\t\t\t<CustomButton\n\t\t\t\t\tstyle={STYLE_FIX_TO_CENTER_BUTTONS}\n\t\t\t\t\tclass=\"ui green\"\n\t\t\t\t\tdescription=\"Solve\"\n\t\t\t\t\ttarget={isUserContest ? \"blank\" : \"\"}\n\t\t\t\t\tforPath={isUserContest ? contestLink : `/contest/${props.contestId}`}\n\t\t\t\t/>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\nexport default Contest;\n","import React, { useEffect, useState } from \"react\";\nimport { Modal, Button } from \"semantic-ui-react\";\n\nconst ErrorModal = (props) => {\n\tconst [openModal, setOpenModal] = useState(true);\n\tconst { message } = props;\n\tuseEffect(() => {\n\t\tif (message.length > 0) setOpenModal(true);\n\t\telse setOpenModal(false);\n\t}, [message]);\n\n\treturn (\n\t\t<Modal dimmer=\"blurring\" open={openModal}>\n\t\t\t<Modal.Header>ERROR OCCURRED!!!</Modal.Header>\n\t\t\t<Modal.Content>{props.message}</Modal.Content>\n\t\t\t<Modal.Actions>\n\t\t\t\t<Button\n\t\t\t\t\tnegative\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetOpenModal(false);\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\tClose\n\t\t\t\t</Button>\n\t\t\t</Modal.Actions>\n\t\t</Modal>\n\t);\n};\nexport default ErrorModal;\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport ContestTableItem from \"../Components/ContestTableItem\";\nimport { Pagination, Dimmer, Loader } from \"semantic-ui-react\";\nimport axios from \"axios\";\nimport ErrorModal from \"../../Shared/UIElements/ErrorModal\";\n\nconst ContestTable = () => {\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [error, setError] = useState(false);\n\tconst [contestItems, setContestItems] = useState(null);\n\tconst [pageNumber, setPageNumber] = useState(1);\n\n\tfunction pageNumberChangeHandler(event, { activePage }) {\n\t\tsetPageNumber(activePage);\n\t}\n\n\tconst getAllContests = useCallback(async (pageNumber) => {\n\t\tsetIsLoading(true);\n\t\tawait axios({\n\t\t\tbaseURL: `${process.env.REACT_APP_BACKEND_URL}`,\n\t\t\turl: `/contests/all/${pageNumber}`,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetContestItems(res.data.contests);\n\t\t\t\t// console.log(contestItems);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetError(err);\n\t\t\t});\n\t\tsetIsLoading(false);\n\t}, []);\n\n\tuseEffect(() => {\n\t\t// const getAllContests = async () => {\n\t\t// \tsetIsLoading(true);\n\t\t// \tawait axios({\n\t\t// \t\tbaseURL: \"http://localhost:5000/api\",\n\t\t// \t\turl: `/contests/all/${pageNumber}`,\n\t\t// \t})\n\t\t// \t\t.then((res) => {\n\t\t// \t\t\tsetContestItems(res.data.contests);\n\t\t// \t\t})\n\t\t// \t\t.catch((err) => {\n\t\t// \t\t\tsetError(err);\n\t\t// \t\t});\n\t\t// \tsetIsLoading(false);\n\t\t// };\n\t\t// getAllContests();\n\t\tgetAllContests(pageNumber);\n\t}, [pageNumber, getAllContests]);\n\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t<div className={\"vertical-container\"}>\n\t\t\t\t{isLoading && (\n\t\t\t\t\t<Dimmer active className={\"\"} inline={\"centered\"}>\n\t\t\t\t\t\t<Loader>Getting Contests </Loader>\n\t\t\t\t\t</Dimmer>\n\t\t\t\t)}\n\t\t\t\t{!isLoading && !error && contestItems && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<table className=\"ui celled padded table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Contest</th>\n\t\t\t\t\t\t\t\t\t<th className=\"center aligned\">\n\t\t\t\t\t\t\t\t\t\tNumber of Questions\n\t\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t\t\t<th className=\"center aligned\"></th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{contestItems.map((contest) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<ContestTableItem\n\t\t\t\t\t\t\t\t\t\t\tkey={contest._id}\n\t\t\t\t\t\t\t\t\t\t\tcontestId={contest.contestId}\n\t\t\t\t\t\t\t\t\t\t\ttitle={contest.contestName}\n\t\t\t\t\t\t\t\t\t\t\tdivision={contest.contestDivision}\n\t\t\t\t\t\t\t\t\t\t\tnumberOfQues={\n\t\t\t\t\t\t\t\t\t\t\t\tcontest.contestQuestions.length\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tactivePage={pageNumber}\n\t\t\t\t\t\t\tonPageChange={pageNumberChangeHandler}\n\t\t\t\t\t\t\tpointing\n\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\ttotalPages={pageNumber + 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\t\t\t\t{error && <ErrorModal message={error.message} />}\n\t\t\t</div>\n\n\t\t\t{/*<div className=\"sticky-form\" style={{ height: \"fit-content\" }}>*/}\n\t\t\t{/*\t<ContestFilterForm />*/}\n\t\t\t{/*</div>*/}\n\t\t</div>\n\t);\n};\nexport default ContestTable;\n","import React from \"react\";\nimport CustomButton from \"../../Shared/UIElements/CustomButton\";\n\nimport \"../../Styles/QuestionCard.css\";\n\nconst CUSTOM_STYLE_FOR_BOTTOM_BUTTONS = {\n\twidth: \"40%\",\n};\n\nconst QuestionCard = (props) => {\n\tconsole.log(props);\n\tconst { questionName, questionIndex, questionRating, questionLink } = props;\n\treturn (\n\t\t<div className=\"card\">\n\t\t\t<div className=\"content\">\n\t\t\t\t<div className=\"header\">{questionName}</div>\n\t\t\t\t<div className=\"ui fitted divider\"></div>\n\t\t\t\t<div className=\"ui two statistics\">\n\t\t\t\t\t<div className=\"ui mini blue statistic\">\n\t\t\t\t\t\t<div className=\"label\">Problem</div>\n\t\t\t\t\t\t<div className=\"text value\">{questionIndex}</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className=\"ui mini violet statistic\">\n\t\t\t\t\t\t<div className=\"label\">Rating</div>\n\t\t\t\t\t\t<div className=\"text value\">{questionRating}</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className=\"bottom-buttons\">\n\t\t\t\t<CustomButton\n\t\t\t\t\ttarget=\"blank\"\n\t\t\t\t\tstyle={CUSTOM_STYLE_FOR_BOTTOM_BUTTONS}\n\t\t\t\t\tforPath={questionLink}\n\t\t\t\t\tdescription=\"Solve\"\n\t\t\t\t>\n\t\t\t\t\tApprove\n\t\t\t\t</CustomButton>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\n\nexport default QuestionCard;\n","import React, { useState, useCallback, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport QuestionCard from \"../../Questions/Components/QuestionCard\";\nimport axios from \"axios\";\nimport { Loader, Dimmer } from \"semantic-ui-react\";\nimport ErrorModal from \"../../Shared/UIElements/ErrorModal\";\n\nconst ContestInfo = () => {\n\tlet { contestId } = useParams();\n\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [error, setError] = useState(false);\n\tconst [contestInfo, setContestInfo] = useState(null);\n\n\tconst getContestInfoById = useCallback(async () => {\n\t\tsetIsLoading(true);\n\t\tawait axios({\n\t\t\tbaseURL: \"http://localhost:5000/api\",\n\t\t\turl: `/contests/${contestId}`,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tconsole.log(res);\n\t\t\t\tsetContestInfo(res.data.contestInfo);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetError(err);\n\t\t\t});\n\t\tsetIsLoading(false);\n\t}, [contestId]);\n\n\tuseEffect(() => {\n\t\tgetContestInfoById();\n\t}, [getContestInfoById]);\n\n\treturn (\n\t\t<div>\n\t\t\t{isLoading && (\n\t\t\t\t<Dimmer active className={\"\"} inline={\"centered\"}>\n\t\t\t\t\t<Loader>Getting Contest Info </Loader>\n\t\t\t\t</Dimmer>\n\t\t\t)}\n\t\t\t{!isLoading && !error && contestInfo && (\n\t\t\t\t<div className=\"ui stackable cards\">\n\t\t\t\t\t{contestInfo.map((question) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<QuestionCard\n\t\t\t\t\t\t\t\tkey={question.id}\n\t\t\t\t\t\t\t\tquestionName={question.questionName}\n\t\t\t\t\t\t\t\tcontestId={contestId}\n\t\t\t\t\t\t\t\tquestionRating={question.questionRating}\n\t\t\t\t\t\t\t\tquestionPoints={question.questionPoints}\n\t\t\t\t\t\t\t\tquestionIndex={question.questionIndex}\n\t\t\t\t\t\t\t\tquestionLink={question.questionLink}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})}\n\t\t\t\t</div>\n\t\t\t)}\n\t\t\t{error && <ErrorModal message={error.message} />}\n\t\t</div>\n\t);\n};\nexport default ContestInfo;\n","const QUESTION_SORTING_OPTIONS = [\n\t{\n\t\tkey: \"1\",\n\t\ttext: \"Rating : High to Low\",\n\t\tvalue: \"highToLow\",\n\t},\n\t{\n\t\tkey: \"2\",\n\t\ttext: \"Rating : Low to High\",\n\t\tvalue: \"lowToHigh\",\n\t},\n\t{\n\t\tkey: \"3\",\n\t\ttext: \"Recency : Latest First\",\n\t\tvalue: \"latestFirst\",\n\t},\n\t{\n\t\tkey: \"4\",\n\t\ttext: \"Recency : Earliest First\",\n\t\tvalue: \"earliestFirst\",\n\t},\n];\nexport default QUESTION_SORTING_OPTIONS;\n","import { useEffect, useReducer } from \"react\";\nimport { Form, Dropdown, Radio, Input, Button } from \"semantic-ui-react\";\nimport GLOBAL_ALL_TAGS_PRESENT from \"../../Shared/util/AllTagsPresent\";\nimport QUESTION_SORTING_OPTIONS from \"../../Shared/util/QuestionSortingOptions\";\n\n// todo : use a portal here to get the question tags\n\nconst TAGS_OPTIONS = GLOBAL_ALL_TAGS_PRESENT.map((tag) => {\n\treturn {\n\t\tkey: tag,\n\t\tvalue: tag,\n\t\ttext: tag,\n\t};\n});\n\nconst CUSTOM_STYLE_FOR_SORT_DROPDOWN = {\n\tpadding: \"0.5rem 1rem\",\n};\n\nconst minMaxRatingValidator = (value) => {\n\treturn value >= 800 && value <= 4000;\n};\n\nconst INTIAL_STATE = {\n\ttagCombination: \"AND\",\n\ttagOptions: [],\n\texcludedTagOptions: [],\n\tsortingOption: \"latestFirst\",\n\tminRating: 800,\n\tmaxRating: 4000,\n\tonlyUnsolved: true,\n\tlastContests: 10,\n\tfetchData: null,\n};\n\nconst ACTION_ID = {\n\tTAG_COMBINATION_CHANGE: \"tagCombination\",\n\tTAG_OPTIONS_CHANGE: \"tagOptions\",\n\tMIN_RATING_CHANGE: \"minRating\",\n\tMAX_RATING_CHANGE: \"maxRating\",\n\tSORTING_OPTION_CHANGE: \"sortingOption\",\n\tTOGGLE_ONLY_UNSOLVED: \"onlyUnsolved\",\n\tEXCLUDED_TAG_OPTIONS_CHANGE: \"excludedTagOptions\",\n\tLAST_CONTESTS_CHANGE: \"lastContests\",\n};\n\nconst formReducer = (state, action) => {\n\tswitch (action.type) {\n\t\tcase \"CHANGE\": {\n\t\t\tfor (let actionId in ACTION_ID) {\n\t\t\t\tif (ACTION_ID[actionId] === action.actionId) {\n\t\t\t\t\t// console.log(action.actionId);\n\t\t\t\t\treturn { ...state, [action.actionId]: action.value };\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn state;\n\t\t}\n\t\tcase \"FETCH_DATA\": {\n\t\t\tconsole.log(state);\n\t\t\tstate.fetchData({ ...state, fetchData: null }, action.pageNumber);\n\t\t\treturn state;\n\t\t}\n\t\t// case \"CHECKBOX_CHANGE\": {\n\t\t//   return { ...state, [action.actionId]: !state[action.actionId] };\n\t\t// }\n\t\tdefault: {\n\t\t\treturn state;\n\t\t}\n\t}\n};\n\nconst QuestionFilterForm = (props) => {\n\tconst { pageNumber } = props;\n\tconst [formState, dispatch] = useReducer(formReducer, {\n\t\t...INTIAL_STATE,\n\t\tfetchData: props.onFormSubmitHandler,\n\t});\n\n\tconst onSubmitHandler = (event) => {\n\t\tevent.preventDefault();\n\t\tdispatch({ type: \"FETCH_DATA\", pageNumber });\n\t};\n\tuseEffect(() => {\n\t\tdispatch({ type: \"FETCH_DATA\", pageNumber });\n\t}, [pageNumber]);\n\n\tconst tagDropdownChangeHandler = (event, { value }) => {\n\t\tdispatch({\n\t\t\ttype: \"CHANGE\",\n\t\t\tactionId: ACTION_ID.TAG_OPTIONS_CHANGE,\n\t\t\tvalue,\n\t\t});\n\t};\n\tconst radioChangeHandler = (event, { value }) => {\n\t\tdispatch({\n\t\t\ttype: \"CHANGE\",\n\t\t\tactionId: ACTION_ID.TAG_COMBINATION_CHANGE,\n\t\t\tvalue,\n\t\t});\n\t};\n\n\tconst minRatingChangeHandler = (event) => {\n\t\tdispatch({\n\t\t\ttype: \"CHANGE\",\n\t\t\tactionId: ACTION_ID.MIN_RATING_CHANGE,\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\tconst maxRatingChangeHandler = (event) => {\n\t\tdispatch({\n\t\t\ttype: \"CHANGE\",\n\t\t\tactionId: ACTION_ID.MAX_RATING_CHANGE,\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\tconst sortingOptionChangeHandler = (event, { value }) => {\n\t\t// console.log(value);\n\t\tdispatch({\n\t\t\ttype: \"CHANGE\",\n\t\t\tactionId: ACTION_ID.SORTING_OPTION_CHANGE,\n\t\t\tvalue: value,\n\t\t});\n\t};\n\t// const onlyUnsolvedToggleHandler = (event, { value }) => {\n\t//   console.log(event.target.value, value);\n\t//   dispatch({\n\t//     type: \"CHECKBOX_CHANGE\",\n\t//     actionId: ACTION_ID.TOGGLE_ONLY_UNSOLVED,\n\t//   });\n\t// };\n\tconst excludedTagOptionsChangeHandler = (event, { value }) => {\n\t\tdispatch({\n\t\t\ttype: \"CHANGE\",\n\t\t\tactionId: ACTION_ID.EXCLUDED_TAG_OPTIONS_CHANGE,\n\t\t\tvalue,\n\t\t});\n\t};\n\tconst lastContestsChangeHandler = (event, { value }) => {\n\t\tdispatch({\n\t\t\ttype: \"CHANGE\",\n\t\t\tactionId: ACTION_ID.LAST_CONTESTS_CHANGE,\n\t\t\tvalue: event.target.value,\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"center-flex filter-form\">\n\t\t\t<Form onSubmit={onSubmitHandler}>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tclassName=\"add-border\"\n\t\t\t\t\t\tclearable\n\t\t\t\t\t\tfluid\n\t\t\t\t\t\tsearch\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tselection\n\t\t\t\t\t\tvalue={formState.tagOptions}\n\t\t\t\t\t\tonChange={tagDropdownChangeHandler}\n\t\t\t\t\t\toptions={TAGS_OPTIONS}\n\t\t\t\t\t\ttext={\"Select Tags\"}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tlabel=\"Combine Tags by 'OR'\"\n\t\t\t\t\t\tname=\"radioGroup\"\n\t\t\t\t\t\tvalue=\"OR\"\n\t\t\t\t\t\tchecked={formState.tagCombination === \"OR\"}\n\t\t\t\t\t\tonChange={radioChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Radio\n\t\t\t\t\t\tlabel=\"Combine Tags by 'AND'\"\n\t\t\t\t\t\tname=\"radioGroup\"\n\t\t\t\t\t\tvalue=\"AND\"\n\t\t\t\t\t\tchecked={formState.tagCombination === \"AND\"}\n\t\t\t\t\t\tonChange={radioChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\tmin={800}\n\t\t\t\t\t\tmax={4000}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tminMaxRatingValidator(formState.minRating)\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: \"danger-input\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel=\"Min Rating\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={formState.minRating}\n\t\t\t\t\t\tonChange={minRatingChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\tmin={800}\n\t\t\t\t\t\tmax={4000}\n\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\tminMaxRatingValidator(formState.maxRating)\n\t\t\t\t\t\t\t\t? \"\"\n\t\t\t\t\t\t\t\t: \"danger-input\"\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlabel=\"Max Rating\"\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tvalue={formState.maxRating}\n\t\t\t\t\t\tonChange={maxRatingChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t{/* <Form.Field>*/}\n\t\t\t\t{/*  <Checkbox*/}\n\t\t\t\t{/*    toggle*/}\n\t\t\t\t{/*    label=\"Only Unsolved Questions\"*/}\n\t\t\t\t{/*    value=\"onlyUnsolved\"*/}\n\t\t\t\t{/*    onChange={onlyUnsolvedToggleHandler}*/}\n\t\t\t\t{/*    checked={formState.onlyUnsolved}*/}\n\t\t\t\t{/*  />*/}\n\t\t\t\t{/*</Form.Field> */}\n\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<span>Sort By -:</span>\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tclassName=\"add-border\"\n\t\t\t\t\t\tstyle={CUSTOM_STYLE_FOR_SORT_DROPDOWN}\n\t\t\t\t\t\tfluid\n\t\t\t\t\t\tonChange={sortingOptionChangeHandler}\n\t\t\t\t\t\tvalue={formState.sortingOption}\n\t\t\t\t\t\toptions={QUESTION_SORTING_OPTIONS}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<Dropdown\n\t\t\t\t\t\tclassName=\"add-border\"\n\t\t\t\t\t\tclearable\n\t\t\t\t\t\tfluid\n\t\t\t\t\t\tsearch\n\t\t\t\t\t\tmultiple\n\t\t\t\t\t\tselection\n\t\t\t\t\t\tvalue={formState.excludedTagOptions}\n\t\t\t\t\t\tonChange={excludedTagOptionsChangeHandler}\n\t\t\t\t\t\toptions={TAGS_OPTIONS}\n\t\t\t\t\t\ttext={\"Exclude Tags\"}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Form.Field>\n\t\t\t\t\t<span>Choose Questions from last 'X' contests</span>\n\t\t\t\t\t<Input\n\t\t\t\t\t\tsize=\"mini\"\n\t\t\t\t\t\tmin={1}\n\t\t\t\t\t\tmax={1600}\n\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\tclassName=\"add-border\"\n\t\t\t\t\t\tplaceholder=\"'X'\"\n\t\t\t\t\t\tvalue={formState.lastContests}\n\t\t\t\t\t\tonChange={lastContestsChangeHandler}\n\t\t\t\t\t/>\n\t\t\t\t</Form.Field>\n\t\t\t\t<Button>Submit</Button>\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\nexport default QuestionFilterForm;\n","const cfConfig = {\n\tbaseURL: \"https://codeforces.com/api/\",\n\tbaseContestLink: \"http://codeforces.com/contest/\",\n\tbaseProbLink: \"https://codeforces.com/problemset/problem/\",\n};\nconst methods = {\n\tcontestList: \"contest.list\",\n\tblogComments: \"blogEntry.comments\",\n\tblogView: \"blogEntry.view\",\n\tcontestHacks: \"contest.hacks\",\n\tcontestRatingChanges: \"contest.ratingChanges\",\n\tcontestStandings: \"contest.standings\",\n\tcontestStatus: \"contest.status\",\n\tproblemSet: \"problemset.problems\",\n\tproblemSetRecentStatus: \"problemset.recentStatus\",\n\tuserStatus: \"user.status\",\n\tuserInfo: \"user.info\",\n\tuserRatedList: \"user.ratedList\",\n\tuserRating: \"user.rating\",\n};\n\nexport { cfConfig, methods };\n","import { cfConfig } from \"./cfConfig\";\n\nconst is_valid = (item) => {\n\tif (item !== null && item !== undefined && item !== \"\") return true;\n\treturn false;\n};\n\nconst getContestLink = (contestId) => {\n\tif (is_valid(contestId)) {\n\t\tlet contestLink = cfConfig.baseContestLink + contestId;\n\t\treturn contestLink;\n\t}\n};\n\nconst getProbLink = (contestId, probIndex) => {\n\tif (is_valid(contestId) && is_valid(probIndex)) {\n\t\tlet probLink = cfConfig.baseProbLink + `${contestId}/${probIndex}`;\n\t\t// console.log(probLink);\n\t\treturn probLink;\n\t}\n};\nexport { getProbLink, getContestLink };\n","import React from \"react\";\nimport CustomButton from \"../../Shared/UIElements/CustomButton\";\nimport { getProbLink } from \"../../Shared/util/getLinks\";\nimport { Label } from \"semantic-ui-react\";\n\nconst STYLE_FIX_TO_CENTER_BUTTONS = {\n\twidth: \"100%\",\n};\n\n// todo : change the 'forPath' props\n// todo : look at the props object and use all the props effectively.\n\nconst QuestionTableItem = (props) => {\n\t// console.log(props);\n\tconst { isUserQuestion, dateAttempted } = props;\n\treturn (\n\t\t<tr className={props.className}>\n\t\t\t<td>\n\t\t\t\t<Label>\n\t\t\t\t\t<h4>{props.probTitle}</h4>\n\t\t\t\t</Label>\n\t\t\t</td>\n\t\t\t<td className=\"center aligned\">\n\t\t\t\t<Label>{props.probRating}</Label>\n\t\t\t</td>\n\n\t\t\t<td className=\"center aligned\">\n\t\t\t\t{props.probTags.map((tag) => {\n\t\t\t\t\treturn <Label key={tag}>{tag}</Label>;\n\t\t\t\t})}\n\t\t\t</td>\n\t\t\t{isUserQuestion ? (\n\t\t\t\t<td className=\"center aligned\">\n\t\t\t\t\t<Label>{dateAttempted}</Label>\n\t\t\t\t</td>\n\t\t\t) : null}\n\t\t\t<td className=\"center aligned\">\n\t\t\t\t<CustomButton\n\t\t\t\t\ttarget=\"blank\"\n\t\t\t\t\tstyle={STYLE_FIX_TO_CENTER_BUTTONS}\n\t\t\t\t\tforPath={getProbLink(props.contestId, props.probIndex)}\n\t\t\t\t\tdescription=\"Solve\"\n\t\t\t\t/>\n\t\t\t</td>\n\t\t</tr>\n\t);\n};\nexport default QuestionTableItem;\n","import axios from \"axios\";\nimport React, { useCallback, useState } from \"react\";\nimport { Pagination, Dimmer, Loader } from \"semantic-ui-react\";\nimport ErrorModal from \"../../Shared/UIElements/ErrorModal\";\nimport QuestionFilterForm from \"../Components/QuestionFilterForm\";\nimport QuestionTableItem from \"../Components/QuestionTableItem\";\n\nconst QuestionTable = () => {\n\tconst [pageNumber, setPageNumber] = useState(1);\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [error, setError] = useState(null);\n\tconst [questionItems, setQuestionItems] = useState(null);\n\n\tconst pageNumberChangeHandler = (event, { activePage }) => {\n\t\tsetPageNumber(activePage);\n\t};\n\n\tconst getQuestions = useCallback(async (reqObject, page) => {\n\t\tsetIsLoading(true);\n\t\tawait axios({\n\t\t\tmethod: \"post\",\n\t\t\turl: `/questions/filter/${page}`,\n\t\t\tbaseURL: process.env.REACT_APP_BACKEND_URL,\n\t\t\tdata: reqObject,\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\t// console.log(res);\n\t\t\t\tsetQuestionItems(res.data.questions);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetError(err);\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\t\tsetIsLoading(false);\n\t}, []);\n\n\treturn (\n\t\t<div className=\"flex space-around-contents\">\n\t\t\t<div className=\"vertical-container\">\n\t\t\t\t{isLoading && (\n\t\t\t\t\t<Dimmer active className={\"\"} inline={\"centered\"}>\n\t\t\t\t\t\t<Loader>Getting Questions</Loader>\n\t\t\t\t\t</Dimmer>\n\t\t\t\t)}\n\n\t\t\t\t{!isLoading && !error && questionItems && (\n\t\t\t\t\t<React.Fragment>\n\t\t\t\t\t\t<table className=\"ui fluid celled padded table\">\n\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t<th>Problem Name</th>\n\t\t\t\t\t\t\t\t\t<th className=\"center aligned\">Rating</th>\n\t\t\t\t\t\t\t\t\t<th className=\"center aligned\">Tags</th>\n\t\t\t\t\t\t\t\t\t<th className=\"center aligned\"></th>\n\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t{questionItems.map((question) => {\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<QuestionTableItem\n\t\t\t\t\t\t\t\t\t\t\tkey={question._id}\n\t\t\t\t\t\t\t\t\t\t\tprobTitle={question.questionName}\n\t\t\t\t\t\t\t\t\t\t\tprobIndex={question.questionIndex}\n\t\t\t\t\t\t\t\t\t\t\tprobRating={question.questionRating}\n\t\t\t\t\t\t\t\t\t\t\tprobTags={question.questionTags}\n\t\t\t\t\t\t\t\t\t\t\tcontestId={question.contestId}\n\t\t\t\t\t\t\t\t\t\t\tprobId={question._id}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t</table>\n\n\t\t\t\t\t\t<Pagination\n\t\t\t\t\t\t\tactivePage={pageNumber}\n\t\t\t\t\t\t\tonPageChange={pageNumberChangeHandler}\n\t\t\t\t\t\t\tpointing\n\t\t\t\t\t\t\tsecondary\n\t\t\t\t\t\t\ttotalPages={pageNumber + 1}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</React.Fragment>\n\t\t\t\t)}\n\n\t\t\t\t{error && <ErrorModal message={error.message} />}\n\t\t\t</div>\n\t\t\t<div className=\"sticky-form\" style={{ height: \"fit-content\" }}>\n\t\t\t\t<QuestionFilterForm\n\t\t\t\t\tpageNumber={pageNumber}\n\t\t\t\t\tonFormSubmitHandler={getQuestions}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t);\n};\nexport default QuestionTable;\n","const processUserData = (data) => {\n\tconst attemptedQuestionsSet = new Set(),\n\t\tsolvedQuestionsSet = new Set(),\n\t\tattemptedContestsSet = new Set();\n\n\tfor (let submission of data) {\n\t\t// Todo: take care of this here.\n\t\tattemptedContestsSet.add(submission.contestId);\n\n\t\tlet tempQuestionId = submission.contestId + submission.problem.index;\n\t\tattemptedQuestionsSet.add(tempQuestionId);\n\t\tif (submission.verdict === \"OK\") {\n\t\t\tsolvedQuestionsSet.add(tempQuestionId);\n\t\t}\n\t}\n\n\tconst solvedQuestionsList = [],\n\t\tattemptedQuestionsList = [];\n\tfor (let submission of data) {\n\t\tlet { problem } = submission;\n\t\tlet processedSubmission = {\n\t\t\ttempQuestionId: submission.contestId + problem.index,\n\t\t\tcontestId: submission.contestId,\n\t\t\tquestionIndex: problem.index,\n\t\t\tquestionName: problem.name,\n\t\t\tquestionRating: problem.rating,\n\t\t\tquestionTags: problem.tags,\n\t\t\tlastAttemptedTime: new Date(submission.creationTimeSeconds * 1000),\n\t\t\tlastAttemptedDate: new Date(\n\t\t\t\tsubmission.creationTimeSeconds * 1000\n\t\t\t).toLocaleDateString(\"en-GB\"),\n\t\t\tsolved: submission.verdict === \"OK\" ? true : false,\n\t\t};\n\t\tif (solvedQuestionsSet.has(processedSubmission.tempQuestionId)) {\n\t\t\tsolvedQuestionsList.push(processedSubmission);\n\t\t\tsolvedQuestionsSet.delete(processedSubmission.tempQuestionId);\n\t\t}\n\n\t\tif (attemptedQuestionsSet.has(processedSubmission.tempQuestionId)) {\n\t\t\tattemptedQuestionsList.push(processedSubmission);\n\t\t\tattemptedQuestionsSet.delete(processedSubmission.tempQuestionId);\n\t\t}\n\t}\n\tconst attemptedContestsList = [...attemptedContestsSet];\n\treturn {\n\t\tattemptedContestsList,\n\t\tattemptedQuestionsList,\n\t\tsolvedQuestionsList,\n\t};\n};\nexport default processUserData;\n","import React from \"react\";\nconst INITIAL_USER_CONTEXT = {\n\tisLoggedIn: false,\n\tuserHandle: \"\",\n\tuserData: {\n\t\tsolvedQuestionsList: [],\n\t\tattemptedQuestionsList: [],\n\t\tattemptedContestsList: [],\n\t},\n\terror: null,\n\tonError: () => {},\n\tsetUserData: () => {},\n\tlogin: () => {},\n};\n\nexport const UserContext = React.createContext(INITIAL_USER_CONTEXT);\n","import React, { useContext, useState } from \"react\";\nimport { Form, Input } from \"semantic-ui-react\";\nimport axios from \"axios\";\n\nimport processUserData from \"../../Shared/util/processUserData\";\nimport { UserContext } from \"../../Shared/Context/UserContext\";\n\nconst UserForm = () => {\n\tconst user = useContext(UserContext);\n\n\tconst [userHandle, setUserHandle] = useState(\"\");\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst onSubmitHandler = async (event) => {\n\t\tevent.preventDefault();\n\t\tsetIsLoading(true);\n\t\tawait axios({\n\t\t\tbaseURL: process.env.REACT_APP_BACKEND_URL,\n\t\t\turl: \"/codeforces/user\",\n\t\t\tparams: {\n\t\t\t\thandle: userHandle,\n\t\t\t},\n\t\t})\n\t\t\t.then((res) => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tuser.onError(null);\n\t\t\t\tuser.login(userHandle, processUserData(res.data.userStatus));\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tuser.onError(err.message);\n\t\t\t});\n\t};\n\n\tconst userHandleChangeHandler = (event) => {\n\t\tsetUserHandle(event.target.value);\n\t};\n\n\treturn (\n\t\t<Form onSubmit={onSubmitHandler}>\n\t\t\t<Form.Field>\n\t\t\t\t<Input\n\t\t\t\t\tlabel=\"Codeforces Handle\"\n\t\t\t\t\tplaceholder=\"Enter Username\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tclassName=\"add-border\"\n\t\t\t\t\tloading={isLoading}\n\t\t\t\t\tvalue={userHandle}\n\t\t\t\t\tonChange={userHandleChangeHandler}\n\t\t\t\t/>\n\t\t\t</Form.Field>\n\t\t</Form>\n\t);\n};\n\nexport default UserForm;\n","import React, { useContext } from \"react\";\nimport { UserContext } from \"../../Shared/Context/UserContext\";\nimport QuestionTableItem from \"../../Questions/Components/QuestionTableItem\";\n\nconst UserQuestionTable = () => {\n\tconst user = useContext(UserContext);\n\tconst questionItems = user.userData.attemptedQuestionsList;\n\n\tquestionItems.sort((a, b) => b.lastAttemptedTime - a.lastAttemptedTime);\n\n\tconsole.log(questionItems);\n\treturn (\n\t\t<div className=\"flex space-around-contents full-width\">\n\t\t\t{questionItems.length > 0 && (\n\t\t\t\t<div className=\"vertical-container\">\n\t\t\t\t\t<table className=\"ui fluid celled padded table\">\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t<th>Problem Name</th>\n\t\t\t\t\t\t\t\t<th className=\"center aligned\">Rating</th>\n\t\t\t\t\t\t\t\t<th className=\"center aligned\">Tags</th>\n\t\t\t\t\t\t\t\t<th className=\"center aligned\">Solved On</th>\n\t\t\t\t\t\t\t\t<th className=\"center aligned\"></th>\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t{questionItems.map((question) => {\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<QuestionTableItem\n\t\t\t\t\t\t\t\t\t\tclassName={\n\t\t\t\t\t\t\t\t\t\t\tquestion.solved\n\t\t\t\t\t\t\t\t\t\t\t\t? \"green-background\"\n\t\t\t\t\t\t\t\t\t\t\t\t: \"yellow-background\"\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\tisUserQuestion={true}\n\t\t\t\t\t\t\t\t\t\tkey={question.tempQuestionId}\n\t\t\t\t\t\t\t\t\t\tprobTitle={question.questionName}\n\t\t\t\t\t\t\t\t\t\tprobIndex={question.questionIndex}\n\t\t\t\t\t\t\t\t\t\tprobRating={question.questionRating}\n\t\t\t\t\t\t\t\t\t\tprobTags={question.questionTags}\n\t\t\t\t\t\t\t\t\t\tcontestId={question.contestId}\n\t\t\t\t\t\t\t\t\t\tprobId={question.tempQuestionId}\n\t\t\t\t\t\t\t\t\t\tdateAttempted={\n\t\t\t\t\t\t\t\t\t\t\tquestion.lastAttemptedDate\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t);\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</table>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t);\n};\n\nexport default UserQuestionTable;\n","import React, { useContext, useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nimport { UserContext } from \"../../Shared/Context/UserContext\";\nimport ContestTableItem from \"../../Contest/Components/ContestTableItem\";\nimport { getContestLink } from \"../../Shared/util/getLinks\";\nimport { Dimmer, Loader } from \"semantic-ui-react\";\nimport ErrorModal from \"../../Shared/UIElements/ErrorModal\";\n\nconst UserContestTable = () => {\n\tconst user = useContext(UserContext);\n\tconst [contestItems, setContestItems] = useState(null);\n\tconst [isLoading, setIsLoading] = useState(true);\n\tconst [error, setError] = useState(null);\n\n\tuseEffect(() => {\n\t\tconst processUserContest = (allContests) => {\n\t\t\tconst contestItemsList = user.userData.attemptedContestsList;\n\t\t\tconsole.log(contestItemsList, allContests);\n\n\t\t\tlet contestItemsSet = new Set(contestItemsList);\n\t\t\tlet result = [];\n\t\t\tfor (let contest of allContests) {\n\t\t\t\tif (contestItemsSet.has(contest.id)) {\n\t\t\t\t\tlet processedContest = {\n\t\t\t\t\t\tcontestId: contest.id,\n\t\t\t\t\t\tcontestName: contest.name,\n\t\t\t\t\t\tcontestLink: getContestLink(contest.id),\n\t\t\t\t\t};\n\t\t\t\t\tresult.push(processedContest);\n\t\t\t\t}\n\t\t\t}\n\t\t\tsetContestItems(result);\n\t\t};\n\n\t\tconst getAllContests = async () => {\n\t\t\tsetIsLoading(true);\n\t\t\tawait axios({\n\t\t\t\tbaseURL: \"http://codeforces.com/api\",\n\t\t\t\turl: \"/contest.list/\",\n\t\t\t})\n\t\t\t\t.then((res) => {\n\t\t\t\t\tprocessUserContest(res.data.result);\n\t\t\t\t})\n\t\t\t\t.catch((err) => {\n\t\t\t\t\tsetError(err);\n\t\t\t\t});\n\t\t\tsetIsLoading(false);\n\t\t};\n\t\tgetAllContests();\n\t}, [user]);\n\n\treturn (\n\t\t<div className=\"flex\">\n\t\t\t{isLoading && (\n\t\t\t\t<Dimmer active className={\"\"} inline={\"centered\"}>\n\t\t\t\t\t<Loader>\n\t\t\t\t\t\tProcessing User Submissions to get Contests!!\n\t\t\t\t\t</Loader>\n\t\t\t\t</Dimmer>\n\t\t\t)}\n\t\t\t{!isLoading && !error && contestItems && (\n\t\t\t\t<table className=\"ui celled padded table\">\n\t\t\t\t\t<thead>\n\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t<th>Contest</th>\n\t\t\t\t\t\t\t<th className=\"center aligned\"></th>\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t</thead>\n\t\t\t\t\t<tbody>\n\t\t\t\t\t\t{contestItems.map((contest) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<ContestTableItem\n\t\t\t\t\t\t\t\t\tclassName={\"green-background\"}\n\t\t\t\t\t\t\t\t\tisUserContest={true}\n\t\t\t\t\t\t\t\t\tkey={contest.contestId}\n\t\t\t\t\t\t\t\t\tcontestId={contest.contestId}\n\t\t\t\t\t\t\t\t\ttitle={contest.contestName}\n\t\t\t\t\t\t\t\t\tcontestLink={contest.contestLink}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t)}\n\n\t\t\t{error && <ErrorModal message={error.message} />}\n\t\t</div>\n\t);\n};\nexport default UserContestTable;\n","import React, { useContext, useState } from \"react\";\nimport UserForm from \"../Components/UserForm\";\nimport UserQuestionTable from \"../Components/UserQuestionTable\";\nimport { Divider, Menu } from \"semantic-ui-react\";\nimport UserContestTable from \"../Components/UserContestTable\";\nimport { UserContext } from \"../../Shared/Context/UserContext\";\nimport ErrorModal from \"../../Shared/UIElements/ErrorModal\";\n\nconst UserDashboard = () => {\n\tconst { isLoggedIn, error } = useContext(UserContext);\n\tconst [activeItem, setActiveItem] = useState(\"questions\");\n\n\tconst itemClickHandler = (e, { name }) => {\n\t\tsetActiveItem(name);\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className=\"vertical-container\">\n\t\t\t\t<UserForm />\n\t\t\t\t<main>\n\t\t\t\t\t<div className=\"full-width\">\n\t\t\t\t\t\t<Divider hidden />\n\n\t\t\t\t\t\t<Menu pointing secondary>\n\t\t\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\t\t\tname=\"contest\"\n\t\t\t\t\t\t\t\tactive={activeItem === \"contest\"}\n\t\t\t\t\t\t\t\tonClick={itemClickHandler}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Menu.Item\n\t\t\t\t\t\t\t\tname=\"questions\"\n\t\t\t\t\t\t\t\tactive={activeItem === \"questions\"}\n\t\t\t\t\t\t\t\tonClick={itemClickHandler}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Menu>\n\t\t\t\t\t\t{error ? <ErrorModal message={error} /> : null}\n\t\t\t\t\t\t{!error && isLoggedIn ? (\n\t\t\t\t\t\t\tactiveItem === \"contest\" ? (\n\t\t\t\t\t\t\t\t<UserContestTable />\n\t\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t\t<UserQuestionTable />\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t) : null}\n\t\t\t\t\t</div>\n\t\t\t\t</main>\n\t\t\t</div>\n\t\t</React.Fragment>\n\t);\n};\nexport default UserDashboard;\n","import React, { useState, useCallback } from \"react\";\r\nimport NavBar from \"./Shared/UIElements/NavBar\";\r\nimport {\r\n\tBrowserRouter as Router,\r\n\tRoute,\r\n\tRedirect,\r\n\tSwitch,\r\n} from \"react-router-dom\";\r\n\r\nimport ContestTable from \"./Contest/Pages/ContestTable\";\r\nimport ContestInfo from \"./Contest/Components/ContestInfo\";\r\nimport QuestionTable from \"./Questions/Pages/QuestionTable\";\r\nimport UserDashboard from \"./User/Pages/UserDashboard\";\r\nimport { UserContext } from \"./Shared/Context/UserContext\";\r\n\r\nimport \"./Styles/App.css\";\r\nimport \"./Styles/FilterForm.css\";\r\n\r\nconst App = () => {\r\n\tconst [userHandle, setUserHandle] = useState(\"\");\r\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\r\n\tconst [userData, setUserData] = useState({\r\n\t\tattemptedQuestionsList: [],\r\n\t\tattemptedContestsList: [],\r\n\t\tsolvedQuestionsList: [],\r\n\t});\r\n\tconst [error, setError] = useState(null);\r\n\r\n\tconst login = useCallback((handle, data) => {\r\n\t\tsetUserData(data);\r\n\t\tsetIsLoggedIn(true);\r\n\t\tsetUserHandle(handle);\r\n\t}, []);\r\n\tconst onError = useCallback((message) => {\r\n\t\tsetError(message);\r\n\t\tsetIsLoggedIn(false);\r\n\t}, []);\r\n\r\n\treturn (\r\n\t\t<UserContext.Provider\r\n\t\t\tvalue={{\r\n\t\t\t\tuserHandle,\r\n\t\t\t\tuserData,\r\n\t\t\t\tisLoggedIn,\r\n\t\t\t\terror,\r\n\t\t\t\tlogin,\r\n\t\t\t\tonError,\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<Router>\r\n\t\t\t\t<NavBar />\r\n\t\t\t\t<main>\r\n\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t<Route exact path=\"/\">\r\n\t\t\t\t\t\t\t<UserDashboard />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/contests\" exact>\r\n\t\t\t\t\t\t\t<ContestTable />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route path=\"/questions\" exact>\r\n\t\t\t\t\t\t\t<QuestionTable />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/contest/:contestId\">\r\n\t\t\t\t\t\t\t<ContestInfo />\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Route exact path=\"/auth\">\r\n\t\t\t\t\t\t\t<main>Auth</main>\r\n\t\t\t\t\t\t</Route>\r\n\t\t\t\t\t\t<Redirect to=\"/\" />\r\n\t\t\t\t\t</Switch>\r\n\t\t\t\t</main>\r\n\t\t\t</Router>\r\n\t\t</UserContext.Provider>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}